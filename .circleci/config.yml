version: 2.1

# orbs:
#   node: circleci/node@x.y

commands:
  install-act:
    description: Install Act for running GitHub Actions locally
    parameters:
      version:
        type: string
        default: "latest"
      debug:
        type: boolean
        default: false
      bin-dir:
        type: string
        default: "/home/circleci/bin"
    steps:
      - run:
          name: "Installing Act << parameters.version >>"
          command: |
            # Set the bin-dir and debug flags based on the parameters
            BIN_DIR_FLAG=""
            DEBUG_FLAG=""

            # Check if a custom bin directory is set
            if [[ "<< parameters.bin-dir >>" != "./bin" ]]; then
              BIN_DIR_FLAG="-b << parameters.bin-dir >>"
            fi

            # Enable debug logging if the debug parameter is true
            if [[ "<< parameters.debug >>" == "true" ]]; then
              DEBUG_FLAG="-d"
            fi

            # Install Act with the specified version, bin-dir, and debug options
            curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash -s -- $BIN_DIR_FLAG $DEBUG_FLAG << parameters.version >>

  create-env-and-secret-file:
    description: Generate environment and secrets files for Act
    parameters:
      env-file:
        type: string
        default: /tmp/act.env
        description: Path to store environment variables file
      secret-file:
        type: string
        default: /tmp/act.secrets
        description: Path to store secret variables file
      secrets:
        type: string
        default: GITHUB_TOKEN
        description: Comma-separated list of secret environment variables
    steps:
      - run:
          name: Generate Environment and Secrets Files
          command: |
            # Get environment variables directly from the env command
            echo "Fetching environment variables..."
            IFS=$'\n'
            ALL_ENV_VARS=($(env))
            
            # Convert the comma-separated secrets parameter into an array
            IFS=',' read -ra SECRETS \<<< "<< parameters.secrets >>"
            
            # Create associative arrays for action and secret variables
            declare -A ACTION_ENV_VARS
            declare -A SECRET_ENV_VARS
            
            # Process environment variables directly
            for VAR in "${ALL_ENV_VARS[@]}"; do
              KEY=${VAR%%=*}
              VALUE=${VAR#*=}
              IS_SECRET=false
              
              for SECRET in "${SECRETS[@]}"; do
                if [[ $KEY == "$SECRET" ]]; then
                  IS_SECRET=true
                  break
                fi
              done

              if [[ $IS_SECRET == true ]]; then
                SECRET_ENV_VARS[$KEY]=$VALUE
              else
                ACTION_ENV_VARS[$KEY]=$VALUE
              fi
            done

            # Write ACTION_ENV_VARS to the .env file
            echo "Writing non-sensitive environment variables to << parameters.env-file >>"
            for KEY in "${!ACTION_ENV_VARS[@]}"; do
              echo "$KEY=${ACTION_ENV_VARS[$KEY]}" >> << parameters.env-file >>
            done
            
            # Write SECRET_ENV_VARS to the .secrets file
            echo "Writing sensitive environment variables to << parameters.secret-file >>"
            for KEY in "${!SECRET_ENV_VARS[@]}"; do
              echo "$KEY=${SECRET_ENV_VARS[$KEY]}" >> << parameters.secret-file >>
            done

  create-workflow-file:
    description: Generate a GitHub Actions-like workflow YAML using jq and yq
    parameters:
      workflow-file:
        type: string
        default: /tmp/workflow.yml
      action:
        type: string
        description: "The GitHub Action to execute (e.g., actions/checkout@v2)"
      with:
        type: string
        description: "Key-value pairs for the `with` block"
      env:
        type: string
        default: "{}"
        description: "Optional key-value pairs for the `env` block"
      workflow-name:
        type: string
        default: "circleci"
      workflow-event:
        type: string
        default: "push"
      job-name:
        type: string
        default: "action"
      runs-on-image:
        type: string
        default: "ubuntu-latest"
    steps:
      - run:
          name: Generate Workflow YAML Using yq
          command: |
            # Capture 'with' and 'env' inputs directly
            WITH_STRING=$(cat \<<EOF
            << parameters.with >>
            EOF
            )

            ENV_STRING=$(cat \<<EOF
            << parameters.env >>
            EOF
            )

            echo $ENV_STRING
            echo $WITH_STRING

            # Format 'with' parameter
            if [ -n "$WITH_STRING" ]; then
              formatted_with="        with:\n$(echo "$WITH_STRING" | sed 's/^/          /')"
            else
              formatted_with=""
            fi

            # Format 'env' parameter
            if [ -n "$ENV_STRING" ]; then
              formatted_env="        env:\n$(echo "$ENV_STRING" | sed 's/^/          /')"
            else
              formatted_env=""
            fi

            # Generate the workflow YAML file
            cat \<<EOF > << parameters.workflow-file >>
            name: << parameters.workflow-name >>
            on: << parameters.workflow-event >>
            jobs:
              << parameters.job-name >>:
                runs-on: << parameters.runs-on-image >>
                steps:
                  - uses: << parameters.action >>
            $formatted_with
            $formatted_env
            EOF

            echo "Generated workflow YAML file at << parameters.workflow-file >>"



  act:
    parameters:
      uses:
        type: string
      with:
        type: string
      env:
        type: string
    steps:
      - run:
          name: Running << parameters.uses >>
          command: |
            echo "test"

jobs:
  test:
    machine:
      image: ubuntu-2404:current
    steps:
      - checkout
      - install-act
      - create-env-and-secret-file
      - create-workflow-file:
          action: actions/hello-world-javascript-action@v1.1
          with: |
            who-to-greet: "Mona the Octocat"
            hello: "world"
          env: |
            testing: 123
      - run: cat /tmp/workflow.yml
      - run: 
          name: Running Act
          command: |
            act -W /tmp/workflow.yml -P ubuntu-latest=node:16-buster-slim --secret-file /tmp/act.secrets --env-file /tmp/act.env -b --detect-event
    # environment:
    #   GITHUB_TOKEN: "testing123"


workflows:
  main:
    jobs:
      - test